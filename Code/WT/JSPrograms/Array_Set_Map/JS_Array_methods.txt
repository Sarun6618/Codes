JavaScript Array Methods
1. map( )
This method creates a new array with the results of calling a provided function on every element in this array.
Ex: let arr=[4,16,25];
console.log(arr.map(Math.sqrt));		// 2,4,25

console.log(arr.map(sumTen);		//14,26,35
function sumTen(num){
return num+10;
}


2. filter( )
This method creates a new array with only elements that passes the condition inside the provided function.

Ex: let arr=[4,16,25];
console.log(arr.filter(isEven));  // 4,16

function isEven(num){
if(num % 2 ==0) return num;
}


3. sort( )
This method is used to arrange/sort array’s elements either in ascending or descending order.


4. forEach( )
This method helps to loop over array by executing a provided callback function for each element in an array.

Ex: const arr=[4,16,25];
arr.forEach(myfun);
function myfun( item, index){
  console.log( index +":"+ item);
}

5. concat( )
This method is used to merge two or more arrays and returns a new array, without changing the existing arrays.


6. every( )
This method checks every element in the array that passes the condition, returning true or false as appropriate.

Ex: const arr=[4,16,25];
console.log(arr.every(isEven));  //false

function isEven(num){
if(num % 2 ==0) return num;
}

7. some( )
This method checks if at least one element in the array that passes the condition, returning true or false as appropriate.

Ex: const arr=[4,16,25];
console.log(arr.some(isEven));  //true

function isEven(num){
if(num % 2 ==0) return num;
}


8. includes( )
This method checks if an array includes the element that passes the condition, returning true or false as appropriate.
Ex: const arr=[4,16,25];
console.log(arr.inclueds(4));  //true



9. join( )
This method returns a new string by concatenating all of the array’s elements separated by the specified separator.
Ex: const arr=[4,16,25];
console.log(arr.join());  //4,16,25

console.log(arr.join(" and "));  //4 and 16 and 25



10. reduce( )
This method applies a function against an accumulator and each element in the array to reduce it to a single value.

Ex: const arr=[4,16,25];
console.log(arr.reduce(sumall));  //45

function sumall(pre, current){
return pre+current;
}




11. find( )
This method returns the value of the first element in an array that pass the test in a testing function.
Ex: const arr=[4,16,25];
console.log(arr.find(findEle));  //25

function findEle(ele){
return ele >21;
}





12. findIndex( )
This method returns the index of the first element in an array that pass the test in a testing function.
Ex: const arr=[4,16,25];
console.log(arr.findIndex(findEle));  //0

function findEle(ele){
return ele <5;
}



13. indexOf( )
This method returns the index of the first occurrence of the specified element in the array, or -1 if it is not found.


14. fill( )
This method fills the elements in an array with a static value and returns the modified array.


15. slice( )
This method returns a new array with specified start to end elements.


16. reverse( )
This method reverses an array in place. Element at last index will be first and element at 0 index will be last.


17. push( )
This method adds one or more elements to the end of array and returns the new length of the array.


18. pop( )
This method removes the last element from the end of array and returns that element.


19. shift( )
This method removes the first element from an array and returns that element.


20. unshift( )
This method adds one or more elements to the beginning of an array and returns the new length of the array.

